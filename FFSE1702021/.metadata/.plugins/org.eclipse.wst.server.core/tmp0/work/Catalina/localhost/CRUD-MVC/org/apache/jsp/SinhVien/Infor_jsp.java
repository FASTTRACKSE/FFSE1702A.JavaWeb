/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.8
 * Generated at: 2018-05-22 04:24:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.SinhVien;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import model.*;
import java.util.*;

public final class Infor_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("model");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.ResultSet");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<title>List</title>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		Map<String, String> showLanguage = new Language().vietnameseLanguage();
		String lang = (String) session.getAttribute("lang");
		if (lang != null) {
			if (lang.equals("vietnamese")) {
				showLanguage = new Language().vietnameseLanguage();

			} else if (lang.equals("english")) {
				showLanguage = new Language().englishLanguage();
			}
		}
	
      out.write("\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<h2>");
      out.print(showLanguage.get("List.Tittle"));
      out.write("</h2>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t<div class=\"dropdown\">\r\n");
      out.write("\t\t\t<button class=\"btn btn-primary dropdown-toggle\" type=\"button\"\r\n");
      out.write("\t\t\t\tdata-toggle=\"dropdown\">\r\n");
      out.write("\t\t\t\tDropdown Example <span class=\"caret\"></span>\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t\t<ul class=\"dropdown-menu\">\r\n");
      out.write("\t\t\t\t<li><a href=\"/CRUD-MVC/DaNgonNgu?lang=vietnamese\">VietNamese</a></li>\r\n");
      out.write("\t\t\t\t<li><a href=\"/CRUD-MVC/DaNgonNgu?lang=english\">EngLish</a></li>\r\n");
      out.write("\r\n");
      out.write("\t\t\t</ul>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<h5>\r\n");
      out.write("\t\t\t<a href=\"/CRUD-MVC/SinhVien/Insert.jsp\" style=\"float: right\">");
      out.print(showLanguage.get("List.Add"));
      out.write("</a>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</h5>\r\n");
      out.write("\t\t<table class=\"table table-hover\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>");
      out.print(showLanguage.get("List.ID"));
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t<th>");
      out.print(showLanguage.get("List.Name"));
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t<th>");
      out.print(showLanguage.get("List.Age"));
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t<th>");
      out.print(showLanguage.get("List.Class"));
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t<th>");
      out.print(showLanguage.get("List.Dress"));
      out.write("</th>\r\n");
      out.write("\t\t\t\t\t<th><span class=\"glyphicon\">&#xe019;</span></th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t");

					ArrayList<SinhVien> SV = (ArrayList<SinhVien>) request.getAttribute("listSV");

					for (int j = 0; j < SV.size(); j++) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(SV.get(j).getMasv());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(SV.get(j).getName());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(SV.get(j).getAge());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(SV.get(j).getCls());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(SV.get(j).getDress());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td><a\r\n");
      out.write("\t\t\t\t\t\thref=\"/CRUD-MVC/Update?action=edit&ma=");
      out.print(SV.get(j).getMasv());
      out.write("\"><span\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"glyphicon\">&#x270f;</span></a> <a\r\n");
      out.write("\t\t\t\t\t\thref=\"/CRUD-MVC/Delete?action=delete&ma=");
      out.print(SV.get(j).getMasv());
      out.write("\"><span\r\n");
      out.write("\t\t\t\t\t\t\tclass=\"glyphicon\">&#xe020;</span></a></td>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t");

					}
				
      out.write("\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t");

			int pageid = (int) request.getAttribute("numberpage");
			int maxpageid = (int) request.getAttribute("maxpageid");
		
      out.write("\r\n");
      out.write("\t\t<ul class=\"pagination\">\r\n");
      out.write("\t\t\t<li class=\"page-item\"><a class=\"page-link\"\r\n");
      out.write("\t\t\t\thref=\"InforSV?pageid=1\" aria-label=\"Frist\"> <span\r\n");
      out.write("\t\t\t\t\taria-hidden=\"true\">&laquo;</span>\r\n");
      out.write("\t\t\t</a></li>\r\n");
      out.write("\t\t\t");

				if (pageid != 1) {
			
      out.write("\r\n");
      out.write("\t\t\t<li class=\"page-item\"><a class=\"page-link\"\r\n");
      out.write("\t\t\t\thref=\"InforSV?pageid=");
      out.print(pageid - 1);
      out.write('"');
      out.write('>');
      out.print(pageid - 1);
      out.write("</a></li>\r\n");
      out.write("\t\t\t");

				}
			
      out.write("\r\n");
      out.write("\t\t\t<li class=\"page-item active\"><a class=\"page-link\"\r\n");
      out.write("\t\t\t\thref=\"InforSV?pageid=");
      out.print(pageid);
      out.write('"');
      out.write('>');
      out.print(pageid);
      out.write("</a></li>\r\n");
      out.write("\t\t\t");

				if (pageid != maxpageid) {
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t<li class=\"page-item\"><a class=\"page-link\"\r\n");
      out.write("\t\t\t\thref=\"InforSV?pageid=");
      out.print(pageid + 1);
      out.write('"');
      out.write('>');
      out.print(pageid + 1);
      out.write("</a></li>\r\n");
      out.write("\t\t\t");

				}
			
      out.write("\r\n");
      out.write("\t\t\t<li class=\"page-item\"><a class=\"page-link\"\r\n");
      out.write("\t\t\t\thref=\"InforSV?pageid=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${maxpageid }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" aria-label=\"Last\"> <span\r\n");
      out.write("\t\t\t\t\taria-hidden=\"true\">&raquo;</span>\r\n");
      out.write("\t\t\t</a></li>\r\n");
      out.write("\r\n");
      out.write("\t\t</ul>\r\n");
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
